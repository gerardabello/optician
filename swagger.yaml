swagger: '2.0'
info:
  version: '1.0.0'
  title: Optician API
  description: API for optician
#host: api.optician.io
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /cases:
    post:
      description: Add a case and run it
      operationId: addCase
      parameters:
        - name: case
          in: body
          description: Test to run
          required: true
          schema:
            $ref: '#/definitions/Case'
      responses:
        '303':
          description: ok response, see other (results)
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /results:
    get:
      description: Returns all user tests
      operationId: getTests
      responses:
        '200':
          description: list of tests
          schema:
            type: array
            items:
              schema:
                $ref: '#/definitions/Result'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /results/{id}:
    get:
      description: Returns a user based on a single ID, if the user does not have access to the pet
      operationId: getTest
      parameters:
        - name: id
          in: path
          description: ID of test to fetch
          required: true
          type: string
      responses:
        '200':
          description: test result response
          schema:
            $ref: '#/definitions/Result'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /results/{id}/accept:
    post:
      description: Accepts a test and sets it as base image
      operationId: acceptTest
      parameters:
        - name: id
          in: path
          description: ID of test to fetch
          required: true
          type: string
      responses:
        '200':
          description: test result response
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /image/{id}:
    get:
      description: Returns image
      operationId: getImage
      parameters:
        - name: id
          in: path
          description: ID of the image
          required: true
          type: string
      responses:
        '200':
          description: image file response
          schema:
            type: file
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
definitions:
  Case:
    type: object
    required:
      - projectid
      - branch
      - target
      - browser
      - batch
      - image
    properties:
      projectid:
        type: string
      branch:
        type: string
      target:
        type: string
      browser:
        type: string
      batch:
        type: string
      image:
        type: string
        format: base64
  Result:
    type: object
    required:
      - id
      - projectid
      - branch
      - target
      - browser
      - batch
      - diffscore
      - image
      - baseimage
      - diffimage
    properties:
      testid:
        type: string
      projectid:
        type: string
      branch:
        type: string
      target:
        type: string
      browser:
        type: string
      batch:
        type: string
      diffscore:
        type: number
        format: float64
      image:
        type: string
        format: base64
      baseimage:
        type: string
        format: base64
      diffimage:
        type: string
        format: base64
  errorModel:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string

